exploitsCommandCallback = function(args)
    library = null
    version = null
    output = "LIBRARY VERSION MEMORY%ADDRESS VALUE\n"
    if args.hasIndex("library") then library = args.library
    if args.hasIndex("version") then version = args.version

    if library != null then
        if version != null then
            exploits = ExploitDB.GetExploits(library, version)
            for mem in exploits
                address = mem.key
                for value in mem.value
                    output = output + library + " " + version + " " + address + " " + value + "\n"
                end for
            end for
        else
            exploits = ExploitDB.database[library]
            for ver in exploits
                version = ver.key
                for mem in ver.value
                    address = mem.key
                    for value in mem.value
                        output = output + library + " " + version + " " + address + " " + value + "\n"
                    end for
                end for
            end for
        end if
    else
        for lib in ExploitDB.database
            library = lib.key
            for ver in lib.value 
                version = ver.key
                for mem in ver.value 
                    address = mem.key
                    for value in mem.value
                        output = output + library + " " + version + " " + address + " " + value + "\n"
                    end for
                end for
            end for
        end for
    end if
    print(formatTable(output))
end function

commandManager.registerCommand(Command.New({
    "name": "exploits",
    "description": "Displays exploits in the database",
    "parameters": [
        Parameter.New({
            "name": "library",
            "required": false,
            "examples": "libssh",
            "default": null
        }),
        Parameter.New({
            "name": "version",
            "required": false,
            "examples": "1.0.0",
            "default": null
        }),
    ],
    "callback": @exploitsCommandCallback
}))