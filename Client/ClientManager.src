ClientManager = {}
ClientManager.clients = []

ClientManager.GetFullClientCount = function()
    count = 0
    for client in self.clients
        if client.Type == "Full" then count = count + 1
    end for
    return count
end function

ClientManager.RefreshClients = function()
    if globals.DEBUG then return
    shells = rshell_server(metax)
    if shells.len() != clientManager.GetFullClientCount() then
        for shell in shells
            clientManager.AddFullClient(shell)
        end for
    end if
end function

ClientManager.findIndex = function(client)
    index = 0
    for c in self.clients
        if c.ID == client.ID then return index
        index = index + 1
    end for
end function

// Removes a client
ClientManager.RemoveClient = function(client)
    index = self.findIndex(client)
    if client.Type == "Full" then
        host = client.Computer
        list = host.show_procs().split(char(10))[1:]
        for item in list
            parsedItem = item.split(" ")
            if parsedItem[4] == "bgprocess" then
                client.Computer.close_program(parsedItem[1].val)
            end if
            if parsedItem[4] == "rshell_client" then
                client.Computer.close_program(parsedItem[1].val)
            end if
        end for
    end if
    self.clients.remove(index)
end function

// Adds a full client to the client manager
ClientManager.AddFullClient = function(shell)
    client = new Client
    client.ID = self.clients.len()
    client.Type = "Full"
    client.Shell = shell
    client.Computer = shell.host_computer()
    client.PublicIp = shell.host_computer().public_ip()
    client.LocalIp 	= shell.host_computer().local_ip()
    client.HostName = shell.host_computer().get_name()
    client.UserName = getUser(shell)
    for c in self.clients
        if c.PublicIp == client.PublicIp and c.LocalIp == client.LocalIp then return
    end for
    self.clients.push(client)
end function

// Adds a partial client to the client manager
ClientManager.AddPartialClient = function(shell)
    client = new Client
    client.ID = self.clients.len()
    client.Type = "Partial"
    client.Shell = shell
    client.Computer = shell.host_computer()
    client.PublicIp = shell.host_computer().public_ip()
    client.LocalIp 	= shell.host_computer().local_ip()
    client.HostName = shell.host_computer().get_name()
    client.UserName = getUser(shell)
    for c in self.clients
        if c.PublicIp == client.PublicIp and c.LocalIp == client.LocalIp then return
    end for
    self.clients.push(client)
end function

// Creats a tempory client for Auto Escalation
ClientManager.CreateTempClient = function(shell)
    client = new Client
    client.ID = self.clients.len()
    client.Type = "Temp"
    client.Shell = shell
    client.Computer = shell.host_computer()
    client.PublicIp = shell.host_computer().public_ip()
    client.LocalIp 	= shell.host_computer().local_ip()
    client.HostName = shell.host_computer().get_name()
    client.UserName = getUser(shell)
    return client
end function

// Returns a client in the manager by ID
ClientManager.GetClient = function(clientID)
    //if hasIndex(self.clients, clientIndex) then return self.clients[clientIndex]
    for c in self.clients
        if c.ID == clientID then return c
    end for
    return false
end function

// Returns all clients in the manager
ClientManager.GetClients = function()
    return self.clients
end function

